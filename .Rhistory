3 %%4
help(seq)
borders <- c(20,25,30,35,40,45,50,55,60,65,70)
# data generation ##############################################################
data <- data.frame(Stellung = c(),
Alter = c())
for (i in 1:length(age_dis$Anzahl_in_tausend)) {
len <- age_dis$Anzahl_in_tausend[i]
work_type <- age_dis$Stellung[i]
min <- borders[i%%11]
max <- borders[(i%%11) + 1]
data <- rbind(data, data.frame(Stellung = rep(work_type, len),
Alter = seq(min, max, len = len))
}
for (i in 1:length(age_dis$Anzahl_in_tausend)) {
len <- age_dis$Anzahl_in_tausend[i]
work_type <- age_dis$Stellung[i]
min <- borders[i%%11]
max <- borders[(i%%11) + 1]
data <- rbind(data, data.frame(Stellung = rep(work_type, len),
Alter = seq(min, max, len = len)))
}
for (i in 1:length(age_dis$Anzahl_in_tausend)) {
len <- age_dis$Anzahl_in_tausend[i]
work_type <- age_dis$Stellung[i]
min <- borders[i%%11]
max <- borders[(i%%11) + 1]
data <- rbind(data, data.frame(Stellung = rep(work_type, len),
Alter = seq(min, max, length.out = len)))
}
debugSource("C:/Users/test/OneDrive - uni-bonn.de/Desktop/Studium/Bachelor Arbeit/R/plots/additional R code/Age_destribution.R", echo=TRUE)
library(devtools)
load_all()
debugSource("C:/Users/test/OneDrive - uni-bonn.de/Desktop/Studium/Bachelor Arbeit/R/plots/additional R code/Age_destribution.R", echo=TRUE)
min
max
min
min
i
for (i in 0:(length(age_dis$Anzahl_in_tausend) - 1)) {
len <- age_dis$Anzahl_in_tausend[i]
work_type <- age_dis$Stellung[i]
min <- borders[(i%%9) + 1]
max <- borders[(i%%9) + 2]
data <- rbind(data, data.frame(Stellung = rep(work_type, len),
Alter = seq(min, max, length.out = len)))
}
# data generation ##############################################################
data <- data.frame(Stellung = c(),
Alter = c())
for (i in 0:(length(age_dis$Anzahl_in_tausend) - 1)) {
len <- age_dis$Anzahl_in_tausend[i + 1]
work_type <- age_dis$Stellung[i + 1]
min <- borders[(i%%9) + 1]
max <- borders[(i%%9) + 2]
data <- rbind(data, data.frame(Stellung = rep(work_type, len),
Alter = seq(min, max, length.out = len)))
}
data
length(data$Alter)
## plotting data ###############################################################
p_d <- data %>%
ggplot(aes(x = Alter,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_density(alpha = 0.5)
p_d
oneway.test(Alter ~ Stellung, data = data)
install.packages("coin")
install.packages("coin")
install.packages("coin")
install.packages("coin")
install.packages("coin")
library(coin)
median_test(Alter ~ Stellung, data)
data$Stellung <- factor(data$Stellung)
data
median_test(Alter ~ Stellung, data)
p_d <- data %>%
ggplot(aes(y = Alter,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_violin(alpha = 0.5)
## plotting data ###############################################################
p_d <- data %>%
ggplot(aes(x = Alter,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_density(alpha = 0.5)
## requirements ################################################################
library(tidyverse)
## plotting data ###############################################################
p_d <- data %>%
ggplot(aes(x = Alter,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_density(alpha = 0.5)
p_v <- data %>%
ggplot(aes(y = Alter,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_violin(alpha = 0.5)
p_v
p_v <- data %>%
ggplot(aes(y = Alter,
x = Stellung,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_violin(alpha = 0.5)
p_v
p_v <- data %>%
ggplot(aes(y = Alter,
x = Stellung,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_boxplot(alpha = 0.5)
p_v
sqrt(var(data$Alter))
ks.test(data$Alter,
"pnorm",
mean(data$Alter),
sqrt(var(data$Alter)))
p_g <- data %>%
ggplot(aes(x = Alter)) +
geom_density(size = 1)
p_g
qnorm(10)
qnorm(0.7)
qnorm(0.9)
transformed_data <- data%>%
summarise(unif_alter = (Alter - 20)/70) %>%
summarise(norm_alter = qnorm(Alter))
transformed_data <- data%>%
summarise(unif_alter = (Alter - 20)/70) %>%
summarise(norm_alter = qnorm(unif_alter))
ks.test(transformed_data$norm_alter,
"pnorm",
mean(transformed_data$norm_alter),
sqrt(var(transformed_data$norm_alter)))
transformed_data <- data%>%
summarise(unif_alter = (Alter - 20)/70) %>%
summarise(norm_alter = qnorm(unif_alter)) %>%
destinct(norm_alter)
transformed_data <- data%>%
summarise(unif_alter = (Alter - 20)/70) %>%
summarise(norm_alter = qnorm(unif_alter)) %>%
distinct(norm_alter)
ks.test(transformed_data$norm_alter,
"pnorm",
mean(transformed_data$norm_alter),
sqrt(var(transformed_data$norm_alter)))
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1)
p_g
data%>%
summarise(unif_alter = (Alter - 20)/70)
data%>%
summarise(unif_alter = (Alter - 20)/70) %>%
summarise(norm_alter = qnorm(unif_alter))
data%>%
summarise(unif_alter = (Alter - 20)/70) %>%
summarise(norm_alter = qnorm(unif_alter)) %>%
distinct(norm_alter)
transformed_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/70) %>%
summarise(norm_alter = qnorm(unif_alter)) %>%
distinct(norm_alter)
ks.test(transformed_data$norm_alter,
"pnorm",
mean(transformed_data$norm_alter),
sqrt(var(transformed_data$norm_alter)))
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1)
p_g
unif_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/70)
p_g <- unif_data %>%
ggplot(aes(x = unif_alter)) +
geom_density(size = 1)
p_g
unif_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/60)
p_g <- unif_data %>%
ggplot(aes(x = unif_alter)) +
geom_density(size = 1)
p_g
max(unif_data$unif_alter)
unif_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/50)
max(unif_data$unif_alter)
unif_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/45)
max(unif_data$unif_alter)
unif_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/47)
max(unif_data$unif_alter)
unif_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/46)
max(unif_data$unif_alter)
transformed_data <- unif_data %>%
summarise(norm_alter = qnorm(unif_alter)) %>%
distinct(norm_alter)
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1)
p_g
ks.test(transformed_data$norm_alter,
"pnorm",
mean(transformed_data$norm_alter),
sqrt(var(transformed_data$norm_alter)))
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1) +
geom_density(aes(x = data),
data = data.frame(data = rnorm(10000)),
color = "red")
p_g
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1) +
geom_density(aes(x = data),
data = data.frame(data = rnorm(40000)),
color = "red")
p_g
unif_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/50)
transformed_data <- unif_data %>%
summarise(norm_alter = qnorm(unif_alter)) %>%
distinct(norm_alter)
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1) +
geom_density(aes(x = data),
data = data.frame(data = rnorm(40000)),
color = "red")
p_g
unif_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/46)
transformed_data <- unif_data %>%
summarise(norm_alter = qnorm(unif_alter)) %>%
distinct(norm_alter)
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1) +
geom_density(aes(x = data),
data = data.frame(data = rnorm(40000)),
color = "red")
p_g
## plotting data ###############################################################
theme_set(theme_minimal())
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1) +
geom_density(aes(x = data),
data = data.frame(data = rnorm(40000)),
color = "red",
size = 1)
p_g
p_d <- data %>%
ggplot(aes(x = Alter,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_density(alpha = 0.5) +
labs(title = "Vergleich der Altersverteilungen",
subtitle = "Nach Stellung im Beruf") +
ylab("Wahrscheinlichkeit") +
xlab("Alter") +
theme(text = element_title(family = "Lato"))
p_d
p_d <- data %>%
ggplot(aes(x = Alter,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_density(alpha = 0.5) +
labs(title = "Vergleich der Altersverteilungen",
subtitle = "Nach Stellung im Beruf") +
ylab("Wahrscheinlichkeit") +
xlab("Alter") +
theme(text = element_text(family = "Lato"))
p_d
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1) +
geom_density(aes(x = data),
data = data.frame(data = rnorm(40000)),
color = "red",
size = 1) +
xlab("normiertes Alter") +
labs(title = "Verteilung des normierten Alters") +
theme(text = element_text(family = "Lato"))
p_g
p_g <- transformed_data %>%
ggplot(aes(x = norm_alter)) +
geom_density(size = 1,
fill = "midnightblue",
alpha = 0.5) +
geom_density(aes(x = data),
data = data.frame(data = rnorm(40000)),
color = "red",
size = 1,
fill = "red",
alpha = 0.5) +
xlab("normiertes Alter") +
labs(title = "Verteilung des normierten Alters") +
theme(text = element_text(family = "Lato"))
p_g
p_v <- data %>%
ggplot(aes(y = Alter,
x = Stellung,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_boxplot(alpha = 0.5) +
labs(title = "Boxplot der Altersverteilung",
subtitle = "Nach Stellung im Beruf") +
ylab("Alter") +
theme(text = element_text(family = "Lato"))
p_v
library(coin)
median_test(Alter ~ Stellung, data)
unif_data <- data%>%
summarise(unif_alter = (Alter - 19.5)/46,
stellung = Stellung)
transformed_data <- unif_data %>%
summarise(norm_alter = qnorm(unif_alter),
stellung = stellung) %>%
distinct(norm_alter)
aov(norm_alter ~ stellung, norm_data)
aov(norm_alter ~ stellung, transformed_data)
transformed_data
transformed_data <- unif_data %>%
summarise(norm_alter = qnorm(unif_alter),
stellung = stellung)
transformed_data
aov(norm_alter ~ stellung, transformed_data)
oneway.test(norm_alter ~ stellung, transformed_data)
transformed_data %>%
ggplot(aes(x = norm_alter,
group = stellung,
color = stellung,
fill = stellung)) +
geom_density(size = 1) +
labs(title = "Vergleich der normierten Altersverteilungen",
subtitle = "Nach Stellung im Beruf") +
ylab("Wahrscheinlichkeit") +
xlab("normiertes Alter") +
theme(text = element_text(family = "Lato"))
p_n_d <- transformed_data %>%
ggplot(aes(x = norm_alter,
group = stellung,
color = stellung,
fill = stellung)) +
geom_density(size = 1,
alpha = 0.5) +
labs(title = "Vergleich der normierten Altersverteilungen",
subtitle = "Nach Stellung im Beruf") +
ylab("Wahrscheinlichkeit") +
xlab("normiertes Alter") +
theme(text = element_text(family = "Lato"))
p_n_d
p <- data %>%
ggplot(aes(x = Alter)) +
geom_density(size = 1,
fill = "blue",
alpha = 0.5,
color = "blue") +
labs(title = "Altersverteilung über alle Stellungen") +
ylab("Dichte") +
xlab("Alter") +
theme(text = element_text(family = "Lato"))
p
p_d <- data %>%
ggplot(aes(x = Alter,
group = Stellung,
color = Stellung,
fill = Stellung)) +
geom_density(alpha = 0.5) +
labs(title = "Vergleich der Altersverteilungen",
subtitle = "Nach Stellung im Beruf") +
ylab("Wahrscheinlichkeit") +
xlab("Alter") +
theme(text = element_text(family = "Lato"))
## params generation functions #################################################
gen_rnorm_params <- function(offset) {
force(offset)
mean <- c(offset, 0, 0)
var <- c(1,2,4)
return(data.frame(mean = mean,
var = var))
}
data_norm_b <- gen_data_beta(gen_rnorm_vector, gen_rnorm_params)
## requirements ################################################################
library(tidyverse)
library(stats)
library(devtools)
library(clinfun)
load_all()
data_norm_b <- gen_data_beta(gen_rnorm_vector, gen_rnorm_params)
data_norm_b_plot <- include_method(data_norm_b)
p <- data_norm_b_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method,
fill = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta-Simulation",
subtitle = "Cauchy-Verteilung") +
xlab(expression(alpha[1])) +
ylab("Güte")
offset
## config params ###############################################################
offset <- seq(-2,2, len = 21)
offset
data_norm_b <- gen_data_beta(gen_rnorm_vector, gen_rnorm_params)
data_norm_b_plot <- include_method(data_norm_b)
p <- data_norm_b_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method,
fill = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta-Simulation",
subtitle = "Cauchy-Verteilung") +
xlab(expression(alpha[1])) +
ylab("Güte")
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta-Simulation",
subtitle = "Normalverteilung") +
xlab(expression(alpha[1])) +
ylab("Güte")
t
## plotting the data ###########################################################
theme_set(theme_minimal())
p <- data_norm_b_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method,
fill = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta-Simulation",
subtitle = "Normalverteilung") +
xlab(expression(alpha[1])) +
ylab("Güte")
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta-Simulation",
subtitle = "Normalverteilung + Heteroskedastizität") +
xlab(expression(alpha[1])) +
ylab("Güte")
n_sample <- "random"
data_norm_b <- gen_data_beta(gen_rnorm_vector, gen_rnorm_params)
load_all()
data_norm_b <- gen_data_beta(gen_rnorm_vector, gen_rnorm_params)
data_norm_b_plot <- include_method(data_norm_b)
p <- data_norm_b_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method,
fill = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta-Simulation",
subtitle = "Normalverteilung + Heteroskedastizität") +
xlab(expression(alpha[1])) +
ylab("Güte")
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta-Simulation",
subtitle = "Normalverteilung + Heterosk. + unausgeglichene Stichproben") +
xlab(expression(alpha[1])) +
ylab("Güte")
