geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Power-Simulation",
subtitle = "Normalverteilung") +
xlab("Stichprobengröße") +
ylab("Güte")
p <- data_norm_b_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta Simulation",
subtitle = "Normalverteilung") +
xlab(expression(tau_i)) +
ylab("Güte")
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta Simulation",
subtitle = "Normalverteilung") +
xlab(expression(tau[i])) +
ylab("Güte")
p <- data_norm_b_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta Simulation",
subtitle = "Normalverteilung") +
xlab(expression(tau[1])) +
ylab("Güte")
library(tidyverse)
p <- data_norm_b_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta Simulation",
subtitle = "Normalverteilung") +
xlab(expression(tau[1])) +
ylab("Güte")
## plotting the data ###########################################################
theme_set(theme_minimal())
## plotting the data ###########################################################
theme_set(theme_minimal())
p <- data_norm_b_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta Simulation",
subtitle = "Normalverteilung") +
xlab(expression(tau[1])) +
ylab("Güte")
library(tidyverse)
## plotting the data ###########################################################
theme_set(theme_minimal())
p <- data_norm_b_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta Simulation",
subtitle = "Normalverteilung") +
xlab(expression(tau[1])) +
ylab("Güte")
p <- data_cauchy_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta Simulation",
subtitle = "Normalverteilung") +
xlab(expression(tau[1])) +
ylab("Güte")
p <- data_cauchy_plot %>%
ggplot(aes(x = offset,
y = relative,
group = method,
color = method)) +
theme(text = element_text(size = 13,
family= "Lato"))
p + geom_line(size = 1) +
geom_hline(yintercept = 0.05,
linetype = "dashed",
color = "grey37") +
labs(title = "Beta Simulation",
subtitle = "Cauchy Verteilung") +
xlab(expression(tau[1])) +
ylab("Güte")
help("sample")
help(rep)
rep(1,100)
sample_size <- 10000
bootstrap_size <- 1000
estimate_size <- 100
## normal routine ##############################################################
data <- rnorm(sample_size,
sd = 3)
estimates <- c()
for (i in 1:bootstrap_size) {
estimate_data <- sample(data, size = estimate_size)
estimates <- c(estimates, mean(estimate_data))
}
type <- as.factor(c("value", "estimate"))
type_vals <- c(rep(type[1], sample_size),
rep(type[2]), estimate_size)
data <- c(data, estimates)
data <- data.frame(val = data,
type = type_vals)
sample_size <- 10000
bootstrap_size <- 1000
estimate_size <- 100
## normal routine ##############################################################
data <- rnorm(sample_size,
sd = 3)
estimates <- c()
for (i in 1:bootstrap_size) {
estimate_data <- sample(data, size = estimate_size)
estimates <- c(estimates, mean(estimate_data))
}
type <- as.factor(c("value", "estimate"))
type_vals <- c(rep(type[1], sample_size),
rep(type[2]), bootstrap_size)
data <- c(data, estimates)
data <- data.frame(val = data,
type = type_vals)
data
estimates
sample_size <- 10000
bootstrap_size <- 1000
estimate_size <- 100
## normal routine ##############################################################
data <- rnorm(sample_size,
sd = 3)
estimates <- c()
for (i in 1:bootstrap_size) {
estimate_data <- sample(data, size = estimate_size)
estimates <- c(estimates, mean(estimate_data))
}
type <- as.factor(c("value", "estimate"))
type_vals <- c(rep(type[1], sample_size),
rep(type[2], bootstrap_size))
data <- c(data, estimates)
data <- data.frame(val = data,
type = type_vals)
data
## required ####################################################################
library(tidyverse)
p <- data %>%
ggplot(aes(x = val,
group = type,
color = type)) +
geom_density(size = 1)
p
p <- data %>%
ggplot(aes(x = val,
group = type,
color = type)) +
geom_density(size = 1) +
geom_area(alpha = 0.5)
p
p <- data %>%
ggplot(aes(x = val,
group = type,
color = type)) +
geom_density(size = 1)
p <- data %>%
ggplot(aes(x = val,
group = type,
color = type)) +
geom_area(size = 1,
alpha = 0.5,
stat = "density")
p
p <- data %>%
ggplot(aes(x = val,
group = type,
color = type)) +
geom_area(aes(color = type),
size = 1,
alpha = 0.5,
stat = "density")
p
## plotting ####################################################################
theme_set(theme_minimal())
p <- data %>%
ggplot(aes(x = val,
group = type,
color = type)) +
geom_area(aes(color = type),
size = 1,
alpha = 0.5,
stat = "density")
p
p <- data %>%
ggplot(aes(x = val,
group = type,
color = type)) +
geom_density()
p
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.6) +
geom_area(aes(x = val,
group = type),
estimates,
size = 1) +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
values <- data %>%
filter(type == "value")
estimates <- data %>%
filter(type == "estimate")
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.6) +
geom_area(aes(x = val,
group = type),
estimates,
size = 1) +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.6) +
geom_area(aes(x = val,
group = type),
estimates,
stat = "density"
size = 1) +
estimates
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.6) +
geom_area(aes(x = val,
group = type),
data = estimates,
stat = "density"
size = 1) +
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.6) +
geom_area(mapping = aes(x = val,
group = type),
data = estimates,
stat = "density"
size = 1) +
help(geom_area)
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.6)
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(mapping = aes(x = val,
group = type),
data = estimates,
stat = "density"
size = 1) +
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.6) +
geom_area(mapping = aes(x = val,
group = type),
data = estimates,
stat = "density",
size = 1) +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
colors()
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.6,
color = "deepskyblue") +
geom_area(mapping = aes(x = val,
group = type),
data = estimates,
stat = "density",
size = 1,
color = "midnightblue") +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
help(geom_area)
fill = "midnightblue" +
subtitle = "Vergleich der Dichten") +
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.6,
color = "deepskyblue",
fill = "deepskyblue") +
geom_area(mapping = aes(x = val,
group = type),
data = estimates,
stat = "density",
size = 1,
color = "midnightblue",
fill = "midnightblue") +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.7,
color = "deepskyblue",
fill = "deepskyblue") +
geom_area(mapping = aes(x = val,
group = type),
data = estimates,
stat = "density",
size = 1,
color = "midnightblue",
fill = "midnightblue") +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.7,
color = "deepskyblue",
fill = "deepskyblue") +
geom_area(mapping = aes(x = val,
group = type),
data = estimates,
stat = "density",
size = 1,
color = "midnightblue",
fill = "midnightblue",
alpha = 0.5) +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.3,
color = "deepskyblue",
fill = "deepskyblue") +
geom_area(mapping = aes(x = val,
group = type),
data = estimates,
stat = "density",
size = 1,
color = "midnightblue",
fill = "midnightblue",
alpha = 0.6) +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
p <- values %>%
ggplot(aes(x = val,
group = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.3,
color = "deepskyblue",
fill = "deepskyblue",
show.legend = T) +
geom_area(mapping = aes(x = val,
group = type),
data = estimates,
stat = "density",
size = 1,
color = "midnightblue",
fill = "midnightblue",
alpha = 0.6,
show.legend = T) +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
## normal routine ##############################################################
gen_data <- function(sd) {
data <- rnorm(sample_size,
sd = sd)
estimates <- c()
for (i in 1:bootstrap_size) {
estimate_data <- sample(data, size = estimate_size)
estimates <- c(estimates, mean(estimate_data))
}
type <- as.factor(c("value", "estimate"))
type_vals <- c(rep(type[1], sample_size),
rep(type[2], bootstrap_size))
data <- c(data, estimates)
data <- data.frame(val = data,
type = type_vals)
data <- cbind(data, data.frame(sd = rep(sd, length(type_vals))))
return(data)
}
data_1 <- gen_data(1)
data_4 <- gen_data(4)
data <- rbind(data_1, data_4)
## plotting ####################################################################
theme_set(theme_minimal())
p <- data %>%
ggplot(aes(x = val,
group = type,
color = type,
fill = type)) +
geom_area(size = 1,
stat = "density",
alpha = 0.3) +
facet_wrap(vars(sd)) +
labs(title = "Normalverteilung und Mittelwertschätzungen",
subtitle = "Vergleich der Dichten") +
ylab("Dichte") +
xlab("Werte") +
theme(text = element_text(family = "Lato"))
p
